name: Build and Release

on:
  push:
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release
  ARTIFACT_NAME: broken

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: win-x64
            ext: .exe
          - os: ubuntu-latest
            platform: linux-x64
            ext: ""
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate Build Files with CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build Project
      run: |
        cd build
        cmake --build . --config ${{ env.BUILD_TYPE }}

    - name: Create Release Directory
      run: |
        mkdir release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then copy build\\${{ env.BUILD_TYPE }}\\broken.exe release\\broken.exe; else cp build/broken release/broken; fi

    - name: Package Artifact
      run: |
        cd release
        7z a ../${{ env.ARTIFACT_NAME }}_${{ matrix.platform }}_${{ github.ref_name }}.zip *.*

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}_${{ matrix.platform }}_${{ github.ref_name }}
        path: ${{ env.ARTIFACT_NAME }}_${{ matrix.platform }}_${{ github.ref_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: |
           Automated multi-platform build of **broken**
          - Windows x64 (`broken.exe`)
          - Linux x64 (`broken`)

           WARNING: This software is highly destructive and should only be used in controlled environments.
        files: artifacts/**/* 
        draft: false
        prerelease: false
